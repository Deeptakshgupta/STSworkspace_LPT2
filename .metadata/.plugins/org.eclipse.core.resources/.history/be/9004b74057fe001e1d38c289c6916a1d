package com.wcs.Deep_user.service;


import com.wcs.Deep_user.model.Deep_Deep_user;
import com.wcs.user.model.Deep_user;
import com.wcs.user.security.AESEncryptionUtil;
import com.wcs.user.security.UserRepository;

import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
public class Deep_userServiceImpl implements Deep_userService{
	
	private final UserRepository userRepository;

	@Override
	public void createDeep_user(String Deep_username, String password) {
        Deep_user user = new Deep_user();
        user.setUserName(Deep_username);
        user.setPassword(AESEncryptionUtil.encrypt(password));
        userRepository.save(user);
    }
	@Override
    public Deep_user getDeep_userByDeep_username(String Deep_username) {
        return userRepository.findByDeep_username(Deep_username);
    }

	@Override
    public boolean authenticateDeep_user(String Deep_username, String password) {
        Deep_user Deep_user = userRepository.findByDeep_username(Deep_username);
        if (Deep_user != null && AESEncryptionUtil.decrypt(Deep_user.getPassword()).equals(password)) {
            return true;
        }
        return false;
    }

}
