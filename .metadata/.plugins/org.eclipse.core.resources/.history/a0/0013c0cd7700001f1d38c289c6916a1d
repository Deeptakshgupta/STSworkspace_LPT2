package com.user.service;

import java.time.Instant;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

//import com.user.dto.AuthenticationResponse;
import com.user.dto.LoginRequest;
import com.user.dto.RegisterRequest;
import com.user.model.User_deep;
import com.user.repository.UserRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class AuthService {
	 private final PasswordEncoder passwordEncoder;
	    private final UserRepository userRepository;
	    private final AuthenticationManager authenticationManager;
	    
	    
	 public void signup(RegisterRequest registerRequest) {
	        User_deep user = new User_deep();
	        user.setUsername(registerRequest.getUsername());
	        user.setEmail(registerRequest.getEmail());
	        user.setPassword(passwordEncoder.encode(registerRequest.getPassword()));
	        user.setCreated(Instant.now());
	        user.setEnabled(false);

	        userRepository.save(user);

	    }
	 public String login(LoginRequest loginRequest) {
		 
		 System.out.println("isnide login");
	        Authentication authenticate = authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(loginRequest.getUsername(),
	                loginRequest.getPassword()));
	        SecurityContextHolder.getContext().setAuthentication(authenticate);
	        return "authenticated";
	        
	    }
}
